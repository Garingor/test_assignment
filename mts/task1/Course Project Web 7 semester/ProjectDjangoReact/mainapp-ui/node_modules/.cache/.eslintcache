[{"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/index.js":"1","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/App.js":"2","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/reportWebVitals.js":"3","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/store.js":"4","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/hocs/Layout.js":"5","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Navigation/Navbar.js":"6","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Object/ObjectList.js":"7","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Object/ObjectCreate.js":"8","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Object/ObjectUpdate.js":"9","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Employee/EmployeeUpdate.js":"10","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Employee/EmployeeCreate.js":"11","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/LegalEntity/LegalEntityUpdate.js":"12","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Employee/EmployeeList.js":"13","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/LegalEntity/LegalEntityList.js":"14","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/LegalEntity/LegalEntityCreate.js":"15","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/ResetPassword.js":"16","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Room/RoomList.js":"17","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/ResetPasswordConfirm.js":"18","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Signup.js":"19","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Login.js":"20","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Activate.js":"21","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Room/RoomCreate.js":"22","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Room/RoomUpdate.js":"23","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/reducers/index.js":"24","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/reducers/auth.js":"25","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/actions/types.js":"26","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/actions/auth.js":"27","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Home.js":"28"},{"size":500,"mtime":1636672776613,"results":"29","hashOfConfig":"30"},{"size":3287,"mtime":1640271825906,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1636672776615,"results":"32","hashOfConfig":"30"},{"size":397,"mtime":1640227428012,"results":"33","hashOfConfig":"30"},{"size":493,"mtime":1640264798899,"results":"34","hashOfConfig":"30"},{"size":2673,"mtime":1640273074718,"results":"35","hashOfConfig":"30"},{"size":3969,"mtime":1640229170306,"results":"36","hashOfConfig":"30"},{"size":4049,"mtime":1640229275754,"results":"37","hashOfConfig":"30"},{"size":3414,"mtime":1640229170278,"results":"38","hashOfConfig":"30"},{"size":4018,"mtime":1640228729972,"results":"39","hashOfConfig":"30"},{"size":4982,"mtime":1640228575011,"results":"40","hashOfConfig":"30"},{"size":3878,"mtime":1640228823631,"results":"41","hashOfConfig":"30"},{"size":4424,"mtime":1640228729978,"results":"42","hashOfConfig":"30"},{"size":4327,"mtime":1640228823626,"results":"43","hashOfConfig":"30"},{"size":4619,"mtime":1640228729965,"results":"44","hashOfConfig":"30"},{"size":1457,"mtime":1640267931311,"results":"45","hashOfConfig":"30"},{"size":3122,"mtime":1640229170297,"results":"46","hashOfConfig":"30"},{"size":2170,"mtime":1642095123496,"results":"47","hashOfConfig":"30"},{"size":3311,"mtime":1640270354459,"results":"48","hashOfConfig":"30"},{"size":2249,"mtime":1640267387423,"results":"49","hashOfConfig":"30"},{"size":1181,"mtime":1640271947511,"results":"50","hashOfConfig":"30"},{"size":2275,"mtime":1640229170287,"results":"51","hashOfConfig":"30"},{"size":2254,"mtime":1640229170263,"results":"52","hashOfConfig":"30"},{"size":114,"mtime":1640228196798,"results":"53","hashOfConfig":"30"},{"size":2272,"mtime":1640269664133,"results":"54","hashOfConfig":"30"},{"size":818,"mtime":1640269524001,"results":"55","hashOfConfig":"30"},{"size":4917,"mtime":1640269797901,"results":"56","hashOfConfig":"30"},{"size":453,"mtime":1640267022550,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"blo9qd",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/index.js",[],["128","129"],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/App.js",["130"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Navbar from \"./components/Navigation/Navbar\"\n\nimport RoomList from \"./components/Room/RoomList\";\nimport RoomUpdate from \"./components/Room/RoomUpdate\";\nimport RoomCreate from \"./components/Room/RoomCreate\";\n\nimport ObjectList from \"./components/Object/ObjectList\";\nimport ObjectUpdate from \"./components/Object/ObjectUpdate\";\nimport ObjectCreate from \"./components/Object/ObjectCreate\";\n\nimport LegalEntityList from \"./components/LegalEntity/LegalEntityList\";\nimport LegalEntityUpdate from \"./components/LegalEntity/LegalEntityUpdate\";\nimport LegalEntityCreate from \"./components/LegalEntity/LegalEntityCreate\";\n\nimport EmployeeList from \"./components/Employee/EmployeeList\";\nimport EmployeeUpdate from \"./components/Employee/EmployeeUpdate\";\nimport EmployeeCreate from \"./components/Employee/EmployeeCreate\";\n\nimport Home from \"./components/Account/Home\";\nimport Login from \"./components/Account/Login\";\nimport SignUp from \"./components/Account/Signup\";\nimport Activate from \"./components/Account/Activate\";\nimport ResetPassword from \"./components/Account/ResetPassword\";\nimport ResetPasswordConfirm from \"./components/Account/ResetPasswordConfirm\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n            <Router>\n                <Layout>\n\n                    <Routes>\n                        <Route path=\"/\" exact element={<Home/>} />\n                        <Route path=\"/login\" exact element={<Login/>} />\n                        <Route path=\"/signup\" exact element={<SignUp/>} />\n                        <Route path=\"/reset-password\" exact element={<ResetPassword/>} />\n                        <Route path=\"/password/reset/confirm/:uid/:token\" exact element={<ResetPasswordConfirm/>} />\n                        <Route path=\"/activate/:uid/:token\" exact element={<Activate/>} />\n\n                        <Route path=\"/rooms\" exact element={<RoomList/>} />\n                        <Route path=\"/rooms/edit/:id\" exact element={<RoomUpdate/>} />\n                        <Route path=\"/rooms/add\" exact element={<RoomCreate/>} />\n\n                        <Route path=\"/objects\" exact element={<ObjectList/>} />\n                        <Route path=\"/objects/edit/:id\" exact element={<ObjectUpdate/>} />\n                        <Route path=\"/objects/add\" exact element={<ObjectCreate/>} />\n\n                        <Route path=\"/legalentities\" exact element={<LegalEntityList/>} />\n                        <Route path=\"/legalentities/edit/:id\" exact element={<LegalEntityUpdate/>} />\n                        <Route path=\"/legalentities/add\" exact element={<LegalEntityCreate/>} />\n\n                        <Route path=\"/employees\" exact element={<EmployeeList/>} />\n                        <Route path=\"/employees/edit/:id\" exact element={<EmployeeUpdate/>} />\n                        <Route path=\"/employees/add\" exact element={<EmployeeCreate/>} />\n                    </Routes>\n                </Layout>\n            </Router>\n        </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/reportWebVitals.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/store.js",["131"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/hocs/Layout.js",["132"],"import React, { useEffect } from 'react';\nimport Navbar from '../components/Navigation/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layout = (props) => {\n\n    useEffect(() => {\n        props.checkAuthenticated();\n        props.load_user();\n    }, []);\n\n    return (\n        <div>\n        <Navbar />\n        {props.children}\n    </div>\n    )\n\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Navigation/Navbar.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Object/ObjectList.js",["133"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from \"react-router-dom\";\n\nfunction ObjectList() {\n  const [objects, setObject] = useState([])\n  const [setName] = useState(\"\");\n  const [setDescription] = useState(\"\");\n  const [setCondition] = useState(\"\");\n  const [setDate] = useState(\"\");\n  const [setEmployee] = useState(\"\");\n  const [setRoom] = useState(\"\");\n  const [setAvailability] = useState(\"\");\n  const [setObjectId]=useState(null)\n\n  useEffect(() => {\n    getObjects();\n  },[])\n\n  function getObjects() {\n    fetch(`http://127.0.0.1:8000/api/v1/objects`).then((result) => {\n      result.json().then((resp) => {\n        //console.warn(resp)\n        setObject(resp)\n        setName(resp.name)\n        setDescription(resp.description)\n        setCondition(resp.condition)\n        setDate(resp.date)\n        setEmployee(resp.employee)\n        setRoom(resp.room)\n        setAvailability(resp.availability)\n        setObjectId(resp.id)\n      })\n    })\n  }\n\n  function deleteObject(id) {\n    fetch(`http://127.0.0.1:8000/api/v1/objects/${id}`, {\n      method: 'DELETE'\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getObjects()\n      })\n    })\n  }\n\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h5>Оборудование:</h5>\n                    <div className=\"card card-body\">\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <Link className=\"btn btn-outline-primary\" to={{pathname: `/objects/add`, fromDashboard: false}}>Добавить новое оборудование</Link>\n                      </div>\n                            <table className=\"table table-sm\">\n                                <tbody>\n                                  <tr>\n                                    <th>ID</th>\n                                    <th>Название</th>\n                                    <th>Описание</th>\n                                    <th>Состояние</th>\n                                    <th>Дата внесения</th>\n                                    <th>Кто использует</th>\n                                    <th>Где оборудование</th>\n                                    <th>Доступность</th>\n                                  </tr>\n                                  {\n                                    objects.map((item, i) =>\n                                      <tr key={i}>\n                                        <td>{item.id}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.description}</td>\n                                        <td>{item.condition}</td>\n                                        <td>{item.date}</td>\n                                        <td>{item.employee}</td>\n                                        <td>{item.room}</td>\n                                        <td>{item.availability}</td>\n                                        <td>\n                                          <div className=\"d-grid gap-2 d-md-block\">\n                                            <Link className=\"btn btn-sm btn-outline-info me-md-2\" to={{pathname: `/objects/edit/${item.id}`, fromDashboard: false}}>Обновить</Link>\n                                            <button className=\"btn btn-sm btn-outline-danger\" onClick={() => deleteObject(item.id)}>Удалить</button>\n                                          </div>\n                                        </td>\n                                      </tr>\n                                    )\n                                  }\n                                </tbody>\n                            </table>\n                    </div>\n            </div>\n        </div>\n  );\n}\n\nexport default ObjectList;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Object/ObjectCreate.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Object/ObjectUpdate.js",["134"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from \"react-router-dom\";\n\n\nfunction ObjectUpdate() {\n  const [setObject] = useState([])\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [employee, setEmployee] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [availability, setAvailability] = useState(\"\");\n  const [ObjectId,setObjectId]=useState(null)\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    getObjects();\n  },[])\n\n  function getObjects() {\n    fetch(`http://127.0.0.1:8000/api/v1/objects/${id}/`).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        setObject(resp)\n        setName(resp.name)\n        setDescription(resp.description)\n        setCondition(resp.condition)\n        setDate(resp.date)\n        setEmployee(resp.employee)\n        setRoom(resp.room)\n        setAvailability(resp.availability)\n        setObjectId(resp.id)\n      })\n    })\n  }\n\n  function updateObject()\n  {\n    let object = { name, description, condition, date, employee, room, availability  }\n    //console.warn(\"item\",item)\n    fetch(`http://127.0.0.1:8000/api/v1/objects/${ObjectId}/`, {\n      method: 'PUT',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json'\n      },\n      redirect: \"follow\",\n      body:JSON.stringify(object)\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getObjects()\n      })\n    })\n  }\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <div className=\"card card-body\">\n                    <h5>Обновите данные об оборудовании:</h5>\n                        <br/>\n                            <div>\n                              <label>Название: <input type=\"text\" value={name} onChange={(e)=>{setName(e.target.value)}} /></label> <br /><br />\n                              <label>Описание: <input type=\"text\" value={description} onChange={(e)=>{setDescription(e.target.value)}} /></label> <br /><br />\n                              <label>Состояние: <input type=\"text\" value={condition}  onChange={(e)=>{setCondition(e.target.value)}} /></label> <br /><br />\n                              <label>Дата внесения: <input type=\"text\" value={date}  onChange={(e)=>{setDate(e.target.value)}} /></label> <br /><br />\n                              <label>Кто использует: <input type=\"text\" value={employee}  onChange={(e)=>{setEmployee(e.target.value)}} /></label> <br /><br />\n                              <label>Где оборудование: <input type=\"text\" value={room}  onChange={(e)=>{setRoom(e.target.value)}} /></label> <br /><br />\n                              <label>Доступность: <input type=\"text\" value={availability}  onChange={(e)=>{setAvailability(e.target.value)}} /></label> <br /><br />\n                              <button className=\"btn btn-sm btn-outline-info\" onClick={updateObject} >Обновить данные об оборудование</button>\n                            </div>\n                </div>\n            </div>\n        </div>\n  );\n}\n\nexport default ObjectUpdate;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Employee/EmployeeUpdate.js",["135"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from \"react-router-dom\";\n\n\nfunction EmployeeUpdate() {\n  const [setEmployee] = useState([])\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [patronymic, setPatronymic] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [inn, setInn] = useState(\"\");\n  const [seriespassport, setSeriesPassport] = useState(\"\");\n  const [numberpassport, setNumberPassport] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [legalentity, setLegalEntity] = useState(\"\");\n  const [EmployeeId,setEmployeeId]=useState(null)\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    getEmployees();\n  }, [])\n\n  function getEmployees() {\n    fetch(`http://127.0.0.1:8000/api/v1/employees/${id}/`).then((result) => {\n      result.json().then((resp) => {\n        // console.warn(resp)\n        setEmployee(resp)\n        setName(resp[0].name)\n        setSurname(resp[0].surname)\n        setPatronymic(resp[0].patronymic)\n        setAddress(resp[0].address)\n        setInn(resp[0].inn)\n        setSeriesPassport(resp[0].seriespassport)\n        setNumberPassport(resp[0].numberpassport)\n        setPosition(resp[0].position)\n        setLegalEntity(resp[0].legalentity)\n        setEmployeeId(resp[0].id)\n      })\n    })\n  }\n\n  function updateEmployee()\n  {\n    const employee = { name, surname, patronymic, address, inn, seriespassport, numberpassport, position, legalentity  };\n    //console.warn(\"employee\",employee)\n    fetch(`http://127.0.0.1:8000/api/v1/employees/${EmployeeId}/`, {\n      method: 'PUT',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json'\n      },\n      redirect: \"follow\",\n      body:JSON.stringify(employee)\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getEmployees()\n      })\n    })\n  }\n\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <div className=\"card card-body\">\n                    <h5>Обновите данные о сотруднике:</h5>\n                        <br/>\n                            <div>\n                              <label>Имя: <input type=\"text\" value={name} onChange={(e)=>{setName(e.target.value)}} /></label> <br /><br />\n                              <label>Фамилия: <input type=\"text\" value={surname} onChange={(e)=>{setSurname(e.target.value)}} /></label> <br /><br />\n                              <label>Отчество: <input type=\"text\" value={patronymic}  onChange={(e)=>{setPatronymic(e.target.value)}} /></label> <br /><br />\n                              <label>Адрес: <input type=\"text\" value={address}  onChange={(e)=>{setAddress(e.target.value)}} /></label> <br /><br />\n                              <label>ИНН: <input type=\"text\" value={inn}  onChange={(e)=>{setInn(e.target.value)}} /></label> <br /><br />\n                              <label>Серия паспорта: <input type=\"text\" value={seriespassport}  onChange={(e)=>{setSeriesPassport(e.target.value)}} /></label> <br /><br />\n                              <label>Номер паспорта: <input type=\"text\" value={numberpassport}  onChange={(e)=>{setNumberPassport(e.target.value)}} /></label> <br /><br />\n                              <label>Должность: <input type=\"text\" value={position}  onChange={(e)=>{setPosition(e.target.value)}} /></label> <br /><br />\n                              <label>Начальник: <input type=\"text\" value={legalentity}  onChange={(e)=>{setLegalEntity(e.target.value)}} /></label> <br /><br />\n                              <button className=\"btn btn-sm btn-outline-info\" onClick={updateEmployee } >Обновить данные о сотруднике</button>\n                            </div>\n                </div>\n            </div>\n        </div>\n  );\n}\n\nexport default EmployeeUpdate;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Employee/EmployeeCreate.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/LegalEntity/LegalEntityUpdate.js",["136"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from \"react-router-dom\";\n\n\nfunction LegalEntityUpdate() {\n  const [setLegalEntity] = useState([])\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [patronymic, setPatronymic] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [inn, setInn] = useState(\"\");\n  const [seriespassport, setSeriesPassport] = useState(\"\");\n  const [numberpassport, setNumberPassport] = useState(\"\");\n  const [employeenumber, setEmployeeNumber] = useState(\"\");\n  const [LegalEntityId,setLegalEntityId]=useState(null)\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    getLegalEntities();\n  },[])\n\n  function getLegalEntities() {\n    fetch(`http://127.0.0.1:8000/api/v1/legalentities/${id}/`).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        setLegalEntity(resp)\n        setName(resp[0].name)\n        setSurname(resp[0].surname)\n        setPatronymic(resp[0].patronymic)\n        setAddress(resp[0].address)\n        setInn(resp[0].inn)\n        setSeriesPassport(resp[0].seriespassport)\n        setNumberPassport(resp[0].numberpassport)\n        setEmployeeNumber(resp[0].employeenumber)\n        setLegalEntityId(resp[0].id)\n      })\n    })\n  }\n\n  function updateLegalEntity()\n  {\n    let legalentity = { name, surname, patronymic, address, inn, seriespassport, numberpassport, employeenumber };\n    //console.warn(\"legalentity\", legalentity)\n    fetch(`http://127.0.0.1:8000/api/v1/legalentities/${LegalEntityId}/`, {\n      method: 'PUT',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json'\n      },\n      redirect: \"follow\",\n      body:JSON.stringify(legalentity)\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getLegalEntities()\n      })\n    })\n  }\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <div className=\"card card-body\">\n                    <h5>Обновите данные об юридическом лице:</h5>\n                        <br/>\n                            <div>\n                              <label>Имя: <input type=\"text\" value={name} onChange={(e)=>{setName(e.target.value)}} /></label> <br /><br />\n                              <label>Фамилия: <input type=\"text\" value={surname} onChange={(e)=>{setSurname(e.target.value)}} /></label> <br /><br />\n                              <label>Отчество: <input type=\"text\" value={patronymic}  onChange={(e)=>{setPatronymic(e.target.value)}} /></label> <br /><br />\n                              <label>Адрес: <input type=\"text\" value={address}  onChange={(e)=>{setAddress(e.target.value)}} /></label> <br /><br />\n                              <label>ИНН: <input type=\"text\" value={inn}  onChange={(e)=>{setInn(e.target.value)}} /></label> <br /><br />\n                              <label>Серия паспорта: <input type=\"text\" value={seriespassport}  onChange={(e)=>{setSeriesPassport(e.target.value)}} /></label> <br /><br />\n                              <label>Номер паспорта: <input type=\"text\" value={numberpassport}  onChange={(e)=>{setNumberPassport(e.target.value)}} /></label> <br /><br />\n                              <label>Кол-во подчиненныхы: <input type=\"text\" value={employeenumber}  onChange={(e)=>{setEmployeeNumber(e.target.value)}} /></label> <br /><br />\n                              <button className=\"btn btn-sm btn-outline-info\" onClick={updateLegalEntity } >Обновить данные об юридическом лице</button>\n                            </div>\n                </div>\n            </div>\n        </div>\n  );\n}\n\nexport default LegalEntityUpdate;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Employee/EmployeeList.js",["137"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from \"react-router-dom\";\n\nfunction EmployeeList() {\n  const [employees, setEmployee] = useState([])\n  const [setName] = useState(\"\");\n  const [setSurname] = useState(\"\");\n  const [setPatronymic] = useState(\"\");\n  const [setAddress] = useState(\"\");\n  const [setInn] = useState(\"\");\n  const [setSeriesPassport] = useState(\"\");\n  const [setNumberPassport] = useState(\"\");\n  const [setPosition] = useState(\"\");\n  const [setLegalEntity] = useState(\"\");\n  const [setEmployeeId]=useState(null)\n\n  useEffect(() => {\n    getEmployees();\n  }, [])\n\n  function getEmployees() {\n    fetch(\"http://127.0.0.1:8000/api/v1/employees\").then((result) => {\n      result.json().then((resp) => {\n        // console.warn(resp)\n        setEmployee(resp)\n        setName(resp[0].name)\n        setSurname(resp[0].surname)\n        setPatronymic(resp[0].patronymic)\n        setAddress(resp[0].address)\n        setInn(resp[0].inn)\n        setSeriesPassport(resp[0].seriespassport)\n        setNumberPassport(resp[0].numberpassport)\n        setPosition(resp[0].position)\n        setLegalEntity(resp[0].legalentity)\n        setEmployeeId(resp[0].id)\n      })\n    })\n  }\n\n  function deleteEmployee(id) {\n    fetch(`http://127.0.0.1:8000/api/v1/employees/${id}`, {\n      method: 'DELETE'\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getEmployees()\n      })\n    })\n  }\n\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h5>Сотрудники:</h5>\n                    <div className=\"card card-body\">\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <Link className=\"btn btn-outline-primary\" to={{pathname: `/employees/add`, fromDashboard: false}}>Добавить нового сотрудника</Link>\n                      </div>\n                            <table className=\"table table-sm\">\n                                <tbody>\n                                  <tr>\n                                    <th>ID</th>\n                                    <th>Имя</th>\n                                    <th>Фамилия</th>\n                                    <th>Отчество</th>\n                                    <th>Адрес</th>\n                                    <th>ИНН</th>\n                                    <th>Серия паспорта</th>\n                                    <th>Номер паспорта</th>\n                                    <th>Должность</th>\n                                    <th>Начальник</th>\n                                  </tr>\n                                  {\n                                    employees.map((item, i) =>\n                                      <tr key={i}>\n                                        <td>{item.id}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.surname}</td>\n                                        <td>{item.patronymic}</td>\n                                        <td>{item.address}</td>\n                                        <td>{item.inn}</td>\n                                        <td>{item.seriespassport}</td>\n                                        <td>{item.numberpassport}</td>\n                                        <td>{item.position}</td>\n                                        <td>{item.legalentity}</td>\n                                        <td>\n                                          <div className=\"d-grid gap-2 d-md-block\">\n                                            <Link className=\"btn btn-sm btn-outline-info me-md-2\" to={{pathname: `/employees/edit/${item.id}`, fromDashboard: false}}>Обновить</Link>\n                                            <button className=\"btn btn-sm btn-outline-danger\" onClick={() => deleteEmployee(item.id)}>Удалить</button>\n                                          </div>\n                                        </td>\n                                      </tr>\n                                    )\n                                  }\n                                </tbody>\n                            </table>\n                    </div>\n            </div>\n        </div>\n  );\n}\n\nexport default EmployeeList;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/LegalEntity/LegalEntityList.js",["138"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from \"react-router-dom\";\n\nfunction LegalEntityList() {\n  const [legalentities, setLegalEntity] = useState([])\n  const [setName] = useState(\"\");\n  const [setSurname] = useState(\"\");\n  const [setPatronymic] = useState(\"\");\n  const [setAddress] = useState(\"\");\n  const [setInn] = useState(\"\");\n  const [setSeriesPassport] = useState(\"\");\n  const [setNumberPassport] = useState(\"\");\n  const [setEmployeeNumber] = useState(\"\");\n  const [setLegalEntityId]=useState(null)\n\n  useEffect(() => {\n    getLegalEntities();\n  }, [])\n\n  function getLegalEntities() {\n    fetch(\"http://127.0.0.1:8000/api/v1/legalentities\").then((result) => {\n      result.json().then((resp) => {\n        // console.warn(resp)\n        setLegalEntity(resp)\n        setName(resp[0].name)\n        setSurname(resp[0].surname)\n        setPatronymic(resp[0].patronymic)\n        setAddress(resp[0].address)\n        setInn(resp[0].inn)\n        setSeriesPassport(resp[0].seriespassport)\n        setNumberPassport(resp[0].numberpassport)\n        setEmployeeNumber(resp[0].employeenumber)\n        setLegalEntityId(resp[0].id)\n      })\n    })\n  }\n\n  function deleteLegalEntity(id) {\n    fetch(`http://127.0.0.1:8000/api/v1/legalentities/${id}`, {\n      method: 'DELETE'\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getLegalEntities()\n      })\n    })\n  }\n\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h5>Юридические лица:</h5>\n                    <div className=\"card card-body\">\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <Link className=\"btn btn-outline-primary\" to={{pathname: `/legalentities/add`, fromDashboard: false}}>Добавить новое юридическое лицо</Link>\n                      </div>\n                            <table className=\"table table-sm\">\n                                <tbody>\n                                  <tr>\n                                    <th>ID</th>\n                                    <th>Имя</th>\n                                    <th>Фамилия</th>\n                                    <th>Отчество</th>\n                                    <th>Адрес</th>\n                                    <th>ИНН</th>\n                                    <th>Серия паспорта</th>\n                                    <th>Номер паспорта</th>\n                                    <th>Кол-во подчиненных</th>\n                                  </tr>\n                                  {\n                                    legalentities.map((item, i) =>\n                                      <tr key={i}>\n                                        <td>{item.id}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.surname}</td>\n                                        <td>{item.patronymic}</td>\n                                        <td>{item.address}</td>\n                                        <td>{item.inn}</td>\n                                        <td>{item.seriespassport}</td>\n                                        <td>{item.numberpassport}</td>\n                                        <td>{item.employeenumber}</td>\n                                        <td>\n                                          <div className=\"d-grid gap-2 d-md-block\">\n                                            <Link className=\"btn btn-sm btn-outline-info me-md-2\" to={{pathname: `/legalentities/edit/${item.id}`, fromDashboard: false}}>Обновить</Link>\n                                            <button className=\"btn btn-sm btn-outline-danger\" onClick={() => deleteLegalEntity(item.id)}>Удалить</button>\n                                          </div>\n                                        </td>\n                                      </tr>\n                                    )\n                                  }\n                                </tbody>\n                            </table>\n                    </div>\n            </div>\n        </div>\n  );\n}\n\nexport default LegalEntityList;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/LegalEntity/LegalEntityCreate.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/ResetPassword.js",[],["139","140"],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Room/RoomList.js",["141"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from \"react-router-dom\";\n\nfunction RoomList() {\n  const [rooms, setRoom] = useState([])\n  const [setName] = useState(\"\");\n  const [setFloor] = useState(\"\");\n  const [setNumber] = useState(\"\");\n  const [setRoomId]=useState(null)\n\n  useEffect(() => {\n    getRooms();\n  }, [])\n\n  function getRooms() {\n    fetch(\"http://127.0.0.1:8000/api/v1/rooms\").then((result) => {\n      result.json().then((resp) => {\n        // console.warn(resp)\n        setRoom(resp)\n        setName(resp[0].name)\n        setFloor(resp[0].floor)\n        setNumber(resp[0].number)\n        setRoomId(resp[0].id)\n      })\n    })\n  }\n\n  function deleteRoom(id) {\n    fetch(`http://127.0.0.1:8000/api/v1/rooms/${id}`, {\n      method: 'DELETE'\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getRooms()\n      })\n    })\n  }\n\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h5>Помещения:</h5>\n                    <div className=\"card card-body\">\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <Link className=\"btn btn-outline-primary\" to={{pathname: `/rooms/add`, fromDashboard: false}}>Добавить новое помещение</Link>\n                      </div>\n                            <table className=\"table table-sm\">\n                                <tbody>\n                                  <tr>\n                                    <th>ID</th>\n                                    <th>Название</th>\n                                    <th>Этаж</th>\n                                    <th>Номер</th>\n                                    <th>Действия</th>\n                                  </tr>\n                                  {\n                                    rooms.map((item, i) =>\n                                      <tr key={i}>\n                                        <td>{item.id}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.floor}</td>\n                                        <td>{item.number}</td>\n                                        <td>\n                                          <div className=\"d-grid gap-2 d-md-block\">\n                                            <Link className=\"btn btn-sm btn-outline-info me-md-2\" to={{pathname: `/rooms/edit/${item.id}`, fromDashboard: false}}>Обновить</Link>\n                                            <button className=\"btn btn-sm btn-outline-danger\" onClick={() => deleteRoom(item.id)}>Удалить</button>\n                                          </div>\n                                        </td>\n                                      </tr>\n                                    )\n                                  }\n                                </tbody>\n                            </table>\n                    </div>\n            </div>\n        </div>\n  );\n}\n\nexport default RoomList;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/ResetPasswordConfirm.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Signup.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Login.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Activate.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Room/RoomCreate.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Room/RoomUpdate.js",["142"],"import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from \"react-router-dom\";\n\n\nfunction RoomUpdate() {\n  const [setRoom] = useState([])\n  const [name, setName] = useState(\"\");\n  const [floor, setFloor] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [RoomId,setRoomId]=useState(null)\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    getRooms();\n  },[])\n\n  function getRooms() {\n    fetch(`http://127.0.0.1:8000/api/v1/rooms/${id}/`).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        setRoom(resp)\n        setName(resp.name)\n        setFloor(resp.floor)\n        setNumber(resp.number)\n        setRoomId(resp.id)\n      })\n    })\n  }\n\n  function updateRoom()\n  {\n    let room = { name, floor, number }\n    //console.warn(\"room\", room)\n    fetch(`http://127.0.0.1:8000/api/v1/rooms/${RoomId}/`, {\n      method: 'PATCH',\n      headers:{\n        'Accept':'application/json',\n        'Content-Type':'application/json'\n      },\n      redirect: \"follow\",\n      body:JSON.stringify(room)\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n        getRooms()\n      })\n    })\n  }\n  return (\n    <div className=\"row\">\n            <div className=\"col-md-12\">\n                <div className=\"card card-body\">\n                    <h5>Обновите данные о помещении:</h5>\n                        <br/>\n                            <div>\n                              <label>Название: <input type=\"text\" value={name} onChange={(e)=>{setName(e.target.value)}} /></label> <br /><br />\n                              <label>Этаж: <input type=\"text\" value={floor} onChange={(e)=>{setFloor(e.target.value)}} /></label> <br /><br />\n                              <label>Номер: <input type=\"text\" value={number}  onChange={(e)=>{setNumber(e.target.value)}} /></label> <br /><br />\n                              <button className=\"btn btn-sm btn-outline-info\" onClick={updateRoom} >Обновить данные о помещении</button>\n                            </div>\n                </div>\n            </div>\n        </div>\n  );\n}\n\nexport default RoomUpdate;","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/reducers/index.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/reducers/auth.js",["143"],"import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case AUTHENTICATED_FAIL:\n                return {\n                    ...state,\n                    isAuthenticated: false\n                }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};","/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/actions/types.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/actions/auth.js",[],"/Users/egor/Documents/GitHub/BMSTU_WEB_7_sem_2021/ProjectDjangoReact/mainapp-ui/src/components/Account/Home.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"152","line":1,"column":40,"nodeType":"150","messageId":"151","endLine":1,"endColumn":47},{"ruleId":"153","severity":1,"message":"154","line":11,"column":8,"nodeType":"155","endLine":11,"endColumn":10,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":18,"column":5,"nodeType":"155","endLine":18,"endColumn":7,"suggestions":"158"},{"ruleId":"153","severity":1,"message":"157","line":21,"column":5,"nodeType":"155","endLine":21,"endColumn":7,"suggestions":"159"},{"ruleId":"153","severity":1,"message":"160","line":23,"column":6,"nodeType":"155","endLine":23,"endColumn":8,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"162","line":22,"column":5,"nodeType":"155","endLine":22,"endColumn":7,"suggestions":"163"},{"ruleId":"153","severity":1,"message":"160","line":20,"column":6,"nodeType":"155","endLine":20,"endColumn":8,"suggestions":"164"},{"ruleId":"153","severity":1,"message":"162","line":19,"column":6,"nodeType":"155","endLine":19,"endColumn":8,"suggestions":"165"},{"ruleId":"144","replacedBy":"166"},{"ruleId":"146","replacedBy":"167"},{"ruleId":"153","severity":1,"message":"168","line":14,"column":6,"nodeType":"155","endLine":14,"endColumn":8,"suggestions":"169"},{"ruleId":"153","severity":1,"message":"168","line":17,"column":5,"nodeType":"155","endLine":17,"endColumn":7,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":26,"column":1,"nodeType":"173","endLine":88,"endColumn":2},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["176"],"React Hook useEffect has a missing dependency: 'getObjects'. Either include it or remove the dependency array.",["177"],["178"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'getLegalEntities'. Either include it or remove the dependency array.",["180"],["181"],["182"],["174"],["175"],"React Hook useEffect has a missing dependency: 'getRooms'. Either include it or remove the dependency array.",["183"],["184"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"190","fix":"194"},{"desc":"192","fix":"195"},{"desc":"196","fix":"197"},{"desc":"196","fix":"198"},"Update the dependencies array to be: [props]",{"range":"199","text":"200"},"Update the dependencies array to be: [getObjects]",{"range":"201","text":"202"},{"range":"203","text":"202"},"Update the dependencies array to be: [getEmployees]",{"range":"204","text":"205"},"Update the dependencies array to be: [getLegalEntities]",{"range":"206","text":"207"},{"range":"208","text":"205"},{"range":"209","text":"207"},"Update the dependencies array to be: [getRooms]",{"range":"210","text":"211"},{"range":"212","text":"211"},[322,324],"[props]",[549,551],"[getObjects]",[656,658],[783,785],"[getEmployees]",[756,758],"[getLegalEntities]",[646,648],[628,630],[383,385],"[getRooms]",[444,446]]