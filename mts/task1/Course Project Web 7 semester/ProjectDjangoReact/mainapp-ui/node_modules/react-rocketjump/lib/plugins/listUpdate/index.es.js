import '@babel/runtime/helpers/esm/extends';
import '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
import 'rocketjump-core';
import { r as rj } from '../../rj-8a6e6805.js';
import 'rxjs';
import 'rxjs/operators';
import { get } from 'rocketjump-core/utils';
import '@babel/runtime/helpers/esm/inheritsLoose';
import { set } from 'object-path-immutable';
import '../../index.es.js';
import 'react';
import '../../debugger-ad70456b.js';
import 'hoist-non-react-statics';

var TYPE = 'RJ_LIST_UPDATE';

var defaultIdentity = function defaultIdentity(action, listItem) {
  return action.item.id === listItem.id;
};

var defaultUpdater = function defaultUpdater(action) {
  return action.item;
};

var rjListUpdate = function rjListUpdate(config) {
  if (config === void 0) {
    config = {};
  }

  var identity = config.identity || defaultIdentity;
  var updater = config.updater || defaultUpdater;
  var path = config.path || 'data';
  return rj({
    actions: function actions() {
      return {
        updateItem: function updateItem(item) {
          return {
            type: TYPE,
            item: item
          };
        }
      };
    },
    reducer: function reducer(oldReducer) {
      return function (state, action) {
        if (action.type === TYPE) {
          var list = get(state, path);
          if (list) list = list.map(function (listItem) {
            return identity(action, listItem) ? updater(action, listItem) : listItem;
          });
          return set(state, path, list);
        }

        return oldReducer(state, action);
      };
    }
  });
};

export default rjListUpdate;
