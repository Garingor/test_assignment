import '@babel/runtime/helpers/esm/extends';
import '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
import 'rocketjump-core';
import { r as rj } from '../../rj-8a6e6805.js';
import 'rxjs';
import 'rxjs/operators';
import { get } from 'rocketjump-core/utils';
import '@babel/runtime/helpers/esm/inheritsLoose';
import { set } from 'object-path-immutable';
import '../../index.es.js';
import 'react';
import '../../debugger-ad70456b.js';
import 'hoist-non-react-statics';

var TYPE = 'RJ_LIST_DELETE';

var defaultIdentity = function defaultIdentity(action, listItem) {
  return action.item.id === listItem.id;
};

var rjListDelete = function rjListDelete(config) {
  if (config === void 0) {
    config = {};
  }

  var identity = config.identity || defaultIdentity;
  var path = config.path || 'data';
  return rj({
    actions: function actions() {
      return {
        deleteItem: function deleteItem(item) {
          return {
            type: TYPE,
            item: item
          };
        }
      };
    },
    reducer: function reducer(oldReducer) {
      return function (state, action) {
        if (action.type === TYPE) {
          var paginationPath = path.split('.').map(function (item, i, arr) {
            return i === arr.length - 1 ? 'pagination' : item;
          }).join('.');

          if (state && get(state, paginationPath) && config.warnPagination !== false) {
            // eslint-disable-next-line no-console
            console.warn('It seems you are using this plugin on a paginated list. Remember that this plugin is agnostic wrt pagination, and will break it. To suppress this warning, set warnPagination: false in the config object');
          }

          var list = get(state, path);
          if (list) list = list.filter(function (listItem) {
            return !identity(action, listItem);
          });
          return set(state, path, list);
        }

        return oldReducer(state, action);
      };
    }
  });
};

export default rjListDelete;
