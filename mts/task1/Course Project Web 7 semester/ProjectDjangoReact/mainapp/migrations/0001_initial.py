# Generated by Django 3.2.8 on 2021-12-22 23:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Имя сотрудника')),
                ('surname', models.CharField(max_length=200, null=True, verbose_name='Фамилия сотрудника')),
                ('patronymic', models.CharField(max_length=200, null=True, verbose_name='Отчество сотрудника')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Адрес сотрудника')),
                ('inn', models.IntegerField(null=True, verbose_name='ИНН сотрудника')),
                ('series_passport', models.IntegerField(null=True, verbose_name='Серия паспорта сотрудника')),
                ('number_passport', models.IntegerField(null=True, verbose_name='Номер паспорта сотрудника')),
                ('position', models.CharField(max_length=200, null=True, verbose_name='Должность сотрудника')),
            ],
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Имя юр лица')),
                ('surname', models.CharField(max_length=200, null=True, verbose_name='Фамилия юр лица')),
                ('patronymic', models.CharField(max_length=200, null=True, verbose_name='Отчество юр лица')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Адрес юр лица')),
                ('inn', models.IntegerField(null=True, verbose_name='ИНН юр лица')),
                ('series_passport', models.IntegerField(null=True, verbose_name='Серия паспорта юр лица')),
                ('number_passport', models.IntegerField(null=True, verbose_name='Номер паспорта юр лица')),
                ('employee_number', models.PositiveIntegerField(default=0, verbose_name='кол-во подчиненных юр лица')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Имя помещения')),
                ('floor', models.IntegerField(null=True, verbose_name='Этаж помещения')),
                ('number', models.IntegerField(null=True, verbose_name='Номер помещения')),
            ],
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Название оборудования')),
                ('description', models.CharField(max_length=200, null=True, verbose_name='Описание оборудования')),
                ('condition', models.CharField(choices=[('новый', 'новый'), ('б/у', 'б/у')], max_length=200, null=True, verbose_name='Состояние оборудования')),
                ('date', models.DateField(auto_now=True, verbose_name='Дата внесения оборудования в базу')),
                ('availability', models.BooleanField(default=False, verbose_name='Доступность оборудования')),
                ('employee', models.ForeignKey(default='------', null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.employee', verbose_name='Кто пользуется оборудованием')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.room', verbose_name='Где оборудование')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='legalentity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.legalentity', verbose_name='Начальник сотрудника'),
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
